/*
 * balteca
 *
 * API for balteca
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type TeamRole struct {
	Team Team `json:"team,omitempty"`

	Role string `json:"role,omitempty"`

	From string `json:"from,omitempty"`
}

// AssertTeamRoleRequired checks if the required fields are not zero-ed
func AssertTeamRoleRequired(obj TeamRole) error {
	if err := AssertTeamRequired(obj.Team); err != nil {
		return err
	}
	return nil
}

// AssertRecurseTeamRoleRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of TeamRole (e.g. [][]TeamRole), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseTeamRoleRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aTeamRole, ok := obj.(TeamRole)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertTeamRoleRequired(aTeamRole)
	})
}
