/*
 * balteca
 *
 * API for balteca
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
)

// DefaultApiRouter defines the required methods for binding the api requests to a responses for the DefaultApi
// The DefaultApiRouter implementation should parse necessary information from the http request,
// pass the data to a DefaultApiServicer to perform the required actions, then write the service results to the http response.
type DefaultApiRouter interface {
	CreateDepartment(http.ResponseWriter, *http.Request)
	CreateEmployee(http.ResponseWriter, *http.Request)
	CreateTeam(http.ResponseWriter, *http.Request)
	CreateVacation(http.ResponseWriter, *http.Request)
	DeleteDepartment(http.ResponseWriter, *http.Request)
	DeleteEmployee(http.ResponseWriter, *http.Request)
	DeleteTeam(http.ResponseWriter, *http.Request)
	FireEmployee(http.ResponseWriter, *http.Request)
	GetDepartment(http.ResponseWriter, *http.Request)
	GetDepartmentBreadcrumbs(http.ResponseWriter, *http.Request)
	GetDepartmentList(http.ResponseWriter, *http.Request)
	GetEmployeeByDepartment(http.ResponseWriter, *http.Request)
	GetEmployeeByID(http.ResponseWriter, *http.Request)
	GetEmployeeByNickname(http.ResponseWriter, *http.Request)
	GetEmployeeByTeam(http.ResponseWriter, *http.Request)
	GetEmployeeList(http.ResponseWriter, *http.Request)
	GetTeam(http.ResponseWriter, *http.Request)
	GetTeamList(http.ResponseWriter, *http.Request)
	GetVacationList(http.ResponseWriter, *http.Request)
	IsSubscribed(http.ResponseWriter, *http.Request)
	Login(http.ResponseWriter, *http.Request)
	MeGet(http.ResponseWriter, *http.Request)
	Search(http.ResponseWriter, *http.Request)
	Subscribe(http.ResponseWriter, *http.Request)
	UpdateDepartment(http.ResponseWriter, *http.Request)
	UpdateEmployee(http.ResponseWriter, *http.Request)
	UpdateTeam(http.ResponseWriter, *http.Request)
}

// DefaultApiServicer defines the api actions for the DefaultApi service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type DefaultApiServicer interface {
	CreateDepartment(context.Context, CreateDepartmentRequest) (ImplResponse, error)
	CreateEmployee(context.Context, CreateEmployeeRequest) (ImplResponse, error)
	CreateTeam(context.Context, CreateTeamRequest) (ImplResponse, error)
	CreateVacation(context.Context, CreateVacationRequest) (ImplResponse, error)
	DeleteDepartment(context.Context, string) (ImplResponse, error)
	DeleteEmployee(context.Context, string) (ImplResponse, error)
	DeleteTeam(context.Context, string) (ImplResponse, error)
	FireEmployee(context.Context, string) (ImplResponse, error)
	GetDepartment(context.Context, string) (ImplResponse, error)
	GetDepartmentBreadcrumbs(context.Context, string) (ImplResponse, error)
	GetDepartmentList(context.Context) (ImplResponse, error)
	GetEmployeeByDepartment(context.Context, string) (ImplResponse, error)
	GetEmployeeByID(context.Context, string) (ImplResponse, error)
	GetEmployeeByNickname(context.Context, string) (ImplResponse, error)
	GetEmployeeByTeam(context.Context, string) (ImplResponse, error)
	GetEmployeeList(context.Context) (ImplResponse, error)
	GetTeam(context.Context, string) (ImplResponse, error)
	GetTeamList(context.Context) (ImplResponse, error)
	GetVacationList(context.Context, string) (ImplResponse, error)
	IsSubscribed(context.Context, string) (ImplResponse, error)
	Login(context.Context, LoginRequest) (ImplResponse, error)
	MeGet(context.Context) (ImplResponse, error)
	Search(context.Context, string) (ImplResponse, error)
	Subscribe(context.Context, string) (ImplResponse, error)
	UpdateDepartment(context.Context, string, UpdateDepartmentRequest) (ImplResponse, error)
	UpdateEmployee(context.Context, string, Employee) (ImplResponse, error)
	UpdateTeam(context.Context, string, Team) (ImplResponse, error)
}
