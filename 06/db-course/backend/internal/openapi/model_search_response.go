/*
 * balteca
 *
 * API for balteca
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type SearchResponse struct {
	Employee []EmployeeShort `json:"employee,omitempty"`

	Teams []TeamShort `json:"teams,omitempty"`

	Departments []DepartmentShort `json:"departments,omitempty"`
}

// AssertSearchResponseRequired checks if the required fields are not zero-ed
func AssertSearchResponseRequired(obj SearchResponse) error {
	for _, el := range obj.Employee {
		if err := AssertEmployeeShortRequired(el); err != nil {
			return err
		}
	}
	for _, el := range obj.Teams {
		if err := AssertTeamShortRequired(el); err != nil {
			return err
		}
	}
	for _, el := range obj.Departments {
		if err := AssertDepartmentShortRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertRecurseSearchResponseRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of SearchResponse (e.g. [][]SearchResponse), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseSearchResponseRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aSearchResponse, ok := obj.(SearchResponse)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertSearchResponseRequired(aSearchResponse)
	})
}
